/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { DailyTicket, DailyTicketInterface } from "../DailyTicket";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "TicketClaimed",
    type: "event",
  },
  {
    inputs: [],
    name: "COOLDOWN",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "canPlay",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimDailyTicket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastPlay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "nextEligibleTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610260806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630823d5f31461005c578063098ddabe14610084578063a2724a4d146100b2578063a7940def146100bc578063e5436f04146100cf575b600080fd5b61006f61006a3660046101da565b6100d9565b60405190151581526020015b60405180910390f35b6100a46100923660046101da565b60006020819052908152604090205481565b60405190815260200161007b565b6100a46201518081565b6100a46100ca3660046101da565b610112565b6100d7610147565b005b6001600160a01b03811660009081526020819052604081205480158061010b57506101076201518082610203565b4210155b9392505050565b6001600160a01b03811660009081526020819052604081205480820361013a57504292915050565b61010b6201518082610203565b610150336100d9565b6101925760405162461bcd60e51b815260206004820152600f60248201526e434f4f4c444f574e5f41435449564560881b604482015260640160405180910390fd5b3360008181526020818152604091829020429081905591519182527f396b5ffff46457e3c237a58913543838900ffa6e2c10cd58997e5b173bd21f4b910160405180910390a2565b6000602082840312156101ec57600080fd5b81356001600160a01b038116811461010b57600080fd5b8082018082111561022457634e487b7160e01b600052601160045260246000fd5b9291505056fea264697066735822122001619fe15ba9ee8d207b0678e019a337093e8a4b401fdcc9a65bfb260ccbf01964736f6c63430008180033";

type DailyTicketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DailyTicketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DailyTicket__factory extends ContractFactory {
  constructor(...args: DailyTicketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DailyTicket & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DailyTicket__factory {
    return super.connect(runner) as DailyTicket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DailyTicketInterface {
    return new Interface(_abi) as DailyTicketInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DailyTicket {
    return new Contract(address, _abi, runner) as unknown as DailyTicket;
  }
}
